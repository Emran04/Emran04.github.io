{"version":3,"sources":["webpack:///./src/templates/blog-list-template.js","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["BlogList","props","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","posts","data","allMarkdownRemark","edges","title","config","siteTitle","postEdges","aria-label","className","to","rel","aria-hidden","length","Array","from","_","i","active_cls","key","blogListQuery","PostListing","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","getPostList","map","post","Body","moment","format","Text"],"mappings":"sPA0EeA,UAlEE,SAACC,GAAW,IAAD,EACOA,EAAMC,YAAhCC,EADmB,EACnBA,YAAaC,EADM,EACNA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAE7BE,EAAQT,EAAMU,KAAKC,kBAAkBC,MAC3C,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,UAAWP,IAExB,yBAAKQ,aAAW,2BACf,wBAAIC,UAAU,eACXd,GACD,wBAAIc,UAAU,aACb,kBAAC,OAAD,CACCC,GAAI,SAAWb,EACfc,IAAI,OACJF,UAAU,aAEV,0BAAMG,cAAY,QAAlB,OAIFZ,EAAMa,OAAS,EAAIC,MAAMC,KAAK,CAAEF,OAAQnB,IAAY,SAACsB,EAAGC,GACxD,IAAIC,EAAazB,IAAiBwB,EAAI,EAAK,SAAW,GACtD,OAEC,wBACCR,UAAS,aAAeS,EACxBC,IAAG,qBAAsBF,EAAI,IAE7B,kBAAC,OAAD,CAECP,GAAE,UAAiB,IAANO,EAAU,GAAKA,EAAI,GAChCR,UAAU,aAETQ,EAAI,OAML,MAEFrB,GACD,wBAAIa,UAAU,aACb,kBAAC,OAAD,CACCC,GAAI,SAAWX,EACfU,UAAU,YACVE,IAAI,QACJ,0BAAMC,cAAY,QAAlB,YAaF,IAAMQ,EAAa,c,iCC5E1B,gEAoDeC,IA9CK,SAAC9B,GACpB,IAgBM+B,EAhBc,WACnB,IAAMA,EAAW,GAYjB,OAXA/B,EAAMgB,UAAUgB,SAAQ,SAAAC,GACvBF,EAASG,KAAK,CACbC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjC5B,MAAOoB,EAASG,KAAKI,YAAY3B,MACjC6B,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGrBb,EAGSc,GACjB,OACC,oCAEEd,EAASe,KAAI,SAAAC,GAAI,OAChB,kBAAC,IAAD,CAAMnB,IAAKmB,EAAKlC,MAAOK,UAAU,QAChC,kBAAC,IAAK8B,KAAN,KACC,wBAAI9B,UAAU,cACb,kBAAC,OAAD,CAAMC,GAAE,QAAU4B,EAAKZ,KAAQjB,UAAU,aACvC6B,EAAKlC,QAGR,yCAAeoC,IAAOF,EAAKL,MAAMQ,OAAO,eACxC,kBAAC,IAAKC,KAAN,KACEJ,EAAKJ,SAGP,kBAAC,OAAD,CAAMxB,GAAE,QAAU4B,EAAKZ,MAAvB","file":"component---src-templates-blog-list-template-js-40f9fa6352e8b4e8dea9.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../layout\"\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport config from \"../../data/SiteConfig\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\n\nconst BlogList = (props) => {\n\tconst { currentPage, numPages } = props.pageContext\n\tconst isFirst = currentPage === 1\n\tconst isLast = currentPage === numPages\n\tconst prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n\tconst nextPage = (currentPage + 1).toString()\n\n\tconst posts = props.data.allMarkdownRemark.edges\n\treturn (\n\t\t<HelmetProvider>\n\t\t\t<Layout>\n\t\t\t\t<Helmet title={config.siteTitle} />\n\t\t\t\t<SEO />\n\t\t\t\t<PostListing postEdges={posts} />\n\t\t\t\t\n\t\t\t\t<nav aria-label=\"Page navigation example\">\n\t\t\t\t\t<ul className=\"pagination\">\n\t\t\t\t\t\t{!isFirst && (\n\t\t\t\t\t\t\t<li className=\"page-item\">\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={'/blog/' + prevPage}\n\t\t\t\t\t\t\t\t\trel=\"prev\"\n\t\t\t\t\t\t\t\t\tclassName=\"page-link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{posts.length > 3 ? Array.from({ length: numPages }, (_, i) => {\n\t\t\t\t\t\t\tlet active_cls = currentPage === (i + 1) ? 'active' : ''\n\t\t\t\t\t\t\treturn (\n\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tclassName={`page-item ${active_cls}`}\n\t\t\t\t\t\t\t\t\tkey={`pagination-number${i + 1}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Link\n\n\t\t\t\t\t\t\t\t\t\tto={`/blog/${i === 0 ? \"\" : i + 1}`}\n\t\t\t\t\t\t\t\t\t\tclassName=\"page-link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t{!isLast && (\n\t\t\t\t\t\t\t<li className=\"page-item\">\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={'/blog/' + nextPage}\n\t\t\t\t\t\t\t\t\tclassName=\"page-link\"\n\t\t\t\t\t\t\t\t\trel=\"next\">\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</Layout>\n\t\t</HelmetProvider>\n\t)\n}\n\nexport default BlogList\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n\t  sort: { fields: [frontmatter___date], order: DESC }\n\t  filter: {fileAbsolutePath: {regex: \"/posts/\"}}\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n\t\t\tslug\n\t\t\tdate\n\t\t  }\n\t\t  excerpt\n          frontmatter {\n\t\t\ttitle\n\t\t\ttags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Card from 'react-bootstrap/Card'\nimport './PostListing.css'\nimport moment from 'moment'\n\nconst PostListing = (props) => {\n\tconst getPostList = () => {\n\t\tconst postList = [];\n\t\tprops.postEdges.forEach(postEdge => {\n\t\t\tpostList.push({\n\t\t\t\tpath: postEdge.node.fields.slug,\n\t\t\t\ttags: postEdge.node.frontmatter.tags,\n\t\t\t\tcover: postEdge.node.frontmatter.cover,\n\t\t\t\ttitle: postEdge.node.frontmatter.title,\n\t\t\t\tdate: postEdge.node.fields.date,\n\t\t\t\texcerpt: postEdge.node.excerpt,\n\t\t\t\ttimeToRead: postEdge.node.timeToRead\n\t\t\t});\n\t\t});\n\t\treturn postList;\n\t}\n\n\tconst postList = getPostList();\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpostList.map(post => (\n\t\t\t\t\t<Card key={post.title} className=\"post\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h3 className=\"post-title\">\n\t\t\t\t\t\t\t\t<Link to={`/blog${post.path}`} className=\"post-link\">\n\t\t\t\t\t\t\t\t\t{post.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<p>Posted on: {moment(post.date).format(\"DD/MM/YYYY\")}</p>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t{post.excerpt}\n\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Link to={`/blog${post.path}`}>\n\t\t\t\t\t\t\t\tRead â†’\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default PostListing;\n"],"sourceRoot":""}