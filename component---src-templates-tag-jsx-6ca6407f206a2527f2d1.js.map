{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","className","title","config","siteTitle","React","Component","pageQuery","PostListing","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","getPostList","map","post","key","Body","to","moment","format","Text"],"mappings":"iQAOqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CAAQC,MAAK,oBAAsBT,EAAtB,OAAgCU,IAAOC,YACpD,kBAAC,IAAD,CAAaP,UAAWA,O,GAROQ,IAAMC,WAgBlCC,EAAS,c,iCCvBtB,gEAoDeC,IA9CK,SAACb,GACpB,IAgBMc,EAhBc,WACnB,IAAMA,EAAW,GAYjB,OAXAd,EAAME,UAAUa,SAAQ,SAAAC,GACvBF,EAASG,KAAK,CACbC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCjB,MAAOS,EAASG,KAAKI,YAAYhB,MACjCkB,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGrBb,EAGSc,GACjB,OACC,oCAEEd,EAASe,KAAI,SAAAC,GAAI,OAChB,kBAAC,IAAD,CAAMC,IAAKD,EAAKvB,MAAOD,UAAU,QAChC,kBAAC,IAAK0B,KAAN,KACC,wBAAI1B,UAAU,cACb,kBAAC,OAAD,CAAM2B,GAAE,QAAUH,EAAKZ,KAAQZ,UAAU,aACvCwB,EAAKvB,QAGR,yCAAe2B,IAAOJ,EAAKL,MAAMU,OAAO,eACxC,kBAAC,IAAKC,KAAN,KACEN,EAAKJ,SAGP,kBAAC,OAAD,CAAMO,GAAE,QAAUH,EAAKZ,MAAvB","file":"component---src-templates-tag-jsx-6ca6407f206a2527f2d1.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Card from 'react-bootstrap/Card'\nimport './PostListing.css'\nimport moment from 'moment'\n\nconst PostListing = (props) => {\n\tconst getPostList = () => {\n\t\tconst postList = [];\n\t\tprops.postEdges.forEach(postEdge => {\n\t\t\tpostList.push({\n\t\t\t\tpath: postEdge.node.fields.slug,\n\t\t\t\ttags: postEdge.node.frontmatter.tags,\n\t\t\t\tcover: postEdge.node.frontmatter.cover,\n\t\t\t\ttitle: postEdge.node.frontmatter.title,\n\t\t\t\tdate: postEdge.node.fields.date,\n\t\t\t\texcerpt: postEdge.node.excerpt,\n\t\t\t\ttimeToRead: postEdge.node.timeToRead\n\t\t\t});\n\t\t});\n\t\treturn postList;\n\t}\n\n\tconst postList = getPostList();\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpostList.map(post => (\n\t\t\t\t\t<Card key={post.title} className=\"post\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h3 className=\"post-title\">\n\t\t\t\t\t\t\t\t<Link to={`/blog${post.path}`} className=\"post-link\">\n\t\t\t\t\t\t\t\t\t{post.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<p>Posted on: {moment(post.date).format(\"DD/MM/YYYY\")}</p>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t{post.excerpt}\n\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Link to={`/blog${post.path}`}>\n\t\t\t\t\t\t\t\tRead â†’\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default PostListing;\n"],"sourceRoot":""}