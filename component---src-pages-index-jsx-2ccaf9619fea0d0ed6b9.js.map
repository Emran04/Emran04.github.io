{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["Index","props","postEdges","data","allMarkdownRemark","edges","className","title","config","siteTitle","to","pageQuery","PostListing","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","getPostList","map","post","key","Body","moment","format","Text"],"mappings":"0FAAA,iIA4BeA,UAnBD,SAACC,GACd,IAAMC,EAAYD,EAAME,KAAKC,kBAAkBC,MAC/C,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,yBAAKC,UAAU,mBACd,kBAAC,IAAD,CAAQC,MAAOC,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaP,UAAWA,IAExB,yBAAKI,UAAU,sBACd,kBAAC,OAAD,CAAMI,GAAI,OAAQJ,UAAU,gBAA5B,uBAWC,IAAMK,EAAS,c,iCC/BtB,gEAoDeC,IA9CK,SAACX,GACpB,IAgBMY,EAhBc,WACnB,IAAMA,EAAW,GAYjB,OAXAZ,EAAMC,UAAUY,SAAQ,SAAAC,GACvBF,EAASG,KAAK,CACbC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjChB,MAAOQ,EAASG,KAAKI,YAAYf,MACjCiB,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGrBb,EAGSc,GACjB,OACC,oCAEEd,EAASe,KAAI,SAAAC,GAAI,OAChB,kBAAC,IAAD,CAAMC,IAAKD,EAAKtB,MAAOD,UAAU,QAChC,kBAAC,IAAKyB,KAAN,KACC,wBAAIzB,UAAU,cACb,kBAAC,OAAD,CAAMI,GAAE,QAAUmB,EAAKZ,KAAQX,UAAU,aACvCuB,EAAKtB,QAGR,yCAAeyB,IAAOH,EAAKL,MAAMS,OAAO,eACxC,kBAAC,IAAKC,KAAN,KACEL,EAAKJ,SAGP,kBAAC,OAAD,CAAMf,GAAE,QAAUmB,EAAKZ,MAAvB","file":"component---src-pages-index-jsx-2ccaf9619fea0d0ed6b9.js","sourcesContent":["import React from \"react\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst Index = (props) => {\n\tconst postEdges = props.data.allMarkdownRemark.edges;\n\treturn (\n\t\t<HelmetProvider>\n\t\t\t<Layout>\n\t\t\t\t<div className=\"index-container\">\n\t\t\t\t\t<Helmet title={config.siteTitle} />\n\t\t\t\t\t<SEO />\n\t\t\t\t\t<PostListing postEdges={postEdges} />\n\n\t\t\t\t\t<div className=\"show-all-container\">\n\t\t\t\t\t\t<Link to={'blog'} className=\"read-all-btn\">Read All Posts</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</HelmetProvider>\n\t);\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 4\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fileAbsolutePath: {regex : \"\\/posts/\"} }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Card from 'react-bootstrap/Card'\nimport './PostListing.css'\nimport moment from 'moment'\n\nconst PostListing = (props) => {\n\tconst getPostList = () => {\n\t\tconst postList = [];\n\t\tprops.postEdges.forEach(postEdge => {\n\t\t\tpostList.push({\n\t\t\t\tpath: postEdge.node.fields.slug,\n\t\t\t\ttags: postEdge.node.frontmatter.tags,\n\t\t\t\tcover: postEdge.node.frontmatter.cover,\n\t\t\t\ttitle: postEdge.node.frontmatter.title,\n\t\t\t\tdate: postEdge.node.fields.date,\n\t\t\t\texcerpt: postEdge.node.excerpt,\n\t\t\t\ttimeToRead: postEdge.node.timeToRead\n\t\t\t});\n\t\t});\n\t\treturn postList;\n\t}\n\n\tconst postList = getPostList();\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpostList.map(post => (\n\t\t\t\t\t<Card key={post.title} className=\"post\">\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h3 className=\"post-title\">\n\t\t\t\t\t\t\t\t<Link to={`/blog${post.path}`} className=\"post-link\">\n\t\t\t\t\t\t\t\t\t{post.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<p>Posted on: {moment(post.date).format(\"DD/MM/YYYY\")}</p>\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t{post.excerpt}\n\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t<Link to={`/blog${post.path}`}>\n\t\t\t\t\t\t\t\tRead â†’\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default PostListing;\n"],"sourceRoot":""}